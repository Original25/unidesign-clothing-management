// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id                Int       @id @default(autoincrement())
  supplierReference String?
  catalogReference  String?
  brand             String?
  collection        String?
  description       String?
  createdDate       DateTime?
  saleState         String?
  imageUrl          String?
  isOrganic         Boolean   @default(false)
  isRecycled        Boolean   @default(false)
  colors            Color[]
  variants          Variant[]
}

model Color {
  id         Int       @id @default(autoincrement())
  product    Product   @relation(fields: [productId], references: [id])
  productId  Int
  colorCode  String?
  colorName  String?
  imageUrl   String?
  variants   Variant[]
}

model Size {
  id         Int       @id @default(autoincrement())
  sizeLabel  String?
  sizeCode   String?
  variants   Variant[]
}

model Variant {
  id          Int       @id @default(autoincrement())
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  color       Color     @relation(fields: [colorId], references: [id])
  colorId     Int
  size        Size      @relation(fields: [sizeId], references: [id])
  sizeId      Int
  sku         String?
  saleState   String?
  createdDate DateTime?
  stock       Stock?
}

model Stock {
  id          Int       @id @default(autoincrement())
  variant     Variant   @relation(fields: [variantId], references: [id])
  variantId   Int       @unique
  warehouseId String?
  stockLevel  Int?
  updatedAt   DateTime  @updatedAt
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  role         String?
}

model ApiLog {
  id           Int       @id @default(autoincrement())
  endpoint     String?
  method       String?
  statusCode   Int?
  responseTime Float?
  timestamp    DateTime  @default(now())
}

model Setting {
  id    Int     @id @default(autoincrement())
  key   String  @unique
  value String?
}
